CREATE TABLE INM.CATEGORY
(
    ID          INT PRIMARY KEY,
    TITLE       VARCHAR(255),
    DESCRIPTION TEXT
);

CREATE TABLE INM.DEPARTMENT
(
    ID    INT PRIMARY KEY,
    TITLE VARCHAR(255) NOT NULL
);

CREATE TABLE INM.USERS_GROUP
(
    ID   INT PRIMARY KEY,
    NAME VARCHAR(255)
);

CREATE TABLE INM.USERS
(
    ID       INT PRIMARY KEY,
    LOGIN    VARCHAR(255) NOT NULL,
    PASSWORD VARCHAR(255) NOT NULL,
    NAME     VARCHAR(255) NOT NULL,
    USER_GROUP  INT(10),
    CONTACTS VARCHAR(45),
    EMAIL    VARCHAR(255),
    CONSTRAINT FK_USER_GROUP FOREIGN KEY (USER_GROUP)
        REFERENCES USERS_GROUP (ID)
);

CREATE TABLE INM.INC_STATUS
(
    ID    INT PRIMARY KEY,
    TITLE VARCHAR(255)
);

CREATE TABLE INM.PRIORITY
(
    ID          INT PRIMARY KEY,
    INFLUENCE   INT,
    URGENCY     INT,
    DESCRIPTION VARCHAR(100),
    TERM        INT
);

CREATE TABLE INM.INCIDENT
(
    ID                   INT PRIMARY KEY AUTO_INCREMENT,
    DATE                 TIMESTAMP    NOT NULL,
    CATEGORY             INT(10)      NOT NULL,
    PRIORITY             INT          NOT NULL,
    REQUESTER_DEPARTMENT INT(10)      NOT NULL,
    REQUESTER            VARCHAR(255) NOT NULL,
    REQUESTER_CONTACTS   VARCHAR(45)  NOT NULL,
    IP_ADDRESS           VARCHAR(16),
    DURATION             INT(10),
    DESCRIPTION          VARCHAR(255),
    ENGINEER             INT(10),
    OPERATOR             INT(10)      NOT NULL,
    STATUS               INT(10)      NOT NULL,
    CLOSE_DATE           TIMESTAMP,
    JOURNAL              TEXT,
    CONSTRAINT FK_CATEGORY FOREIGN KEY (CATEGORY)
        REFERENCES CATEGORY (ID),
    CONSTRAINT FK_PRIORITY FOREIGN KEY (PRIORITY)
        REFERENCES PRIORITY (ID),
    CONSTRAINT FK_DEPARTMENT FOREIGN KEY (REQUESTER_DEPARTMENT)
        REFERENCES DEPARTMENT (ID),
    CONSTRAINT FK_ENGINEER FOREIGN KEY (ENGINEER)
        REFERENCES USERS (ID),
    CONSTRAINT FK_OPERATOR FOREIGN KEY (OPERATOR)
        REFERENCES USERS (ID),
    CONSTRAINT FK_STATUS FOREIGN KEY (STATUS)
        REFERENCES INC_STATUS (ID)
);